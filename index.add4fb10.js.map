{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    static STATUS = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    static INITIAL_STATE = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    constructor(initialState = $a5fd07fa01589658$var$Game.INITIAL_STATE){\n        this.status = $a5fd07fa01589658$var$Game.STATUS.idle;\n        this.initialState = initialState;\n        this.score = 0;\n        this.state = this.initialState.map((row)=>row.slice());\n    }\n    moveLeft() {\n        if (this.status === $a5fd07fa01589658$var$Game.STATUS.playing) {\n            const newStateArr = [];\n            for(let i = 0; i < this.state.length; i++){\n                // this code remove all 0 and push it back to the end\n                let newRowArr = this.state[i].filter((el)=>el > 0);\n                for(let index = newRowArr.length; index < this.state.length; index++)newRowArr.push(0);\n                // Here i merged neigber numbers in row\n                for(let j = 0; j < newRowArr.length; j++)if (newRowArr[j] === newRowArr[j + 1]) {\n                    newRowArr[j] = newRowArr[j] + newRowArr[j + 1];\n                    newRowArr[j + 1] = 0;\n                    this.score += newRowArr[j] + newRowArr[j + 1];\n                }\n                newRowArr = newRowArr.filter((el)=>el > 0);\n                for(let index = newRowArr.length; index < this.state.length; index++)newRowArr.push(0);\n                newStateArr.push(newRowArr);\n            }\n            if (!this.checkSameArr(newStateArr)) {\n                this.state = newStateArr;\n                this.randomNumber();\n            }\n            this.loseOrWin();\n        }\n    }\n    moveRight() {\n        if (this.status === $a5fd07fa01589658$var$Game.STATUS.playing) {\n            const newStateArr = [];\n            for(let i = 0; i < this.state.length; i++){\n                // this code remove all 0 and unshift it back to the end\n                let newRowArr = this.state[i].filter((el)=>el > 0);\n                for(let index = newRowArr.length; index < this.state.length; index++)newRowArr.unshift(0);\n                //   Here i merged neigber numbers in row\n                for(let j = newRowArr.length - 1; j > 0; j--)if (newRowArr[j] === newRowArr[j - 1]) {\n                    newRowArr[j] = newRowArr[j] + newRowArr[j - 1];\n                    newRowArr[j - 1] = 0;\n                    this.score += newRowArr[j] + newRowArr[j - 1];\n                }\n                newRowArr = newRowArr.filter((el)=>el > 0);\n                for(let index = newRowArr.length; index < this.state.length; index++)newRowArr.unshift(0);\n                newStateArr.push(newRowArr);\n            }\n            if (!this.checkSameArr(newStateArr)) {\n                this.state = newStateArr;\n                this.randomNumber();\n            }\n            this.loseOrWin();\n        }\n    }\n    moveUp() {\n        if (this.status === $a5fd07fa01589658$var$Game.STATUS.playing) {\n            let newStateArr = [];\n            this.funcReverse(newStateArr);\n            this.state = newStateArr;\n            newStateArr = [];\n            this.moveLeft();\n            this.funcReverse(newStateArr);\n            this.state = newStateArr;\n        }\n    }\n    moveDown() {\n        if (this.status === $a5fd07fa01589658$var$Game.STATUS.playing) {\n            let newStateArr = [];\n            this.funcReverse(newStateArr);\n            this.state = newStateArr;\n            newStateArr = [];\n            this.moveRight();\n            this.funcReverse(newStateArr);\n            this.state = newStateArr;\n        }\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.status;\n    }\n    restart() {\n        this.initialState = $a5fd07fa01589658$var$Game.INITIAL_STATE;\n        this.status = $a5fd07fa01589658$var$Game.STATUS.idle;\n        this.state = this.initialState.map((row)=>row.slice());\n        this.score = 0;\n    }\n    start() {\n        this.status = $a5fd07fa01589658$var$Game.STATUS.playing;\n        this.randomNumber();\n        this.randomNumber();\n    }\n    randomNumber() {\n        const emptyCells = [];\n        for(let rowIndex = 0; rowIndex < this.state.length; rowIndex++){\n            for(let colIndex = 0; colIndex < this.state[rowIndex].length; colIndex++)if (this.state[rowIndex][colIndex] === 0) emptyCells.push({\n                row: rowIndex,\n                col: colIndex\n            });\n        }\n        if (emptyCells.length === 0) return;\n        const randomIndex = Math.floor(Math.random() * emptyCells.length);\n        const { row: row, col: col } = emptyCells[randomIndex];\n        // Place a 2 or 4 in the selected cell\n        const newValue = Math.floor(Math.random() * 10) + 1 > 8 ? 4 : 2;\n        this.state[row][col] = newValue;\n    }\n    loseOrWin() {\n        let isZero = false;\n        let hasMove = false;\n        for(let i = 0; i < this.state.length; i++)for(let j = 0; j < this.state[i].length; j++){\n            if (this.state[i][j] === 2048) {\n                this.status = $a5fd07fa01589658$var$Game.STATUS.win;\n                return;\n            }\n            if (this.state[i][j] === 0) isZero = true;\n            if (j < this.state[i].length - 1 && this.state[i][j] === this.state[i][j + 1]) hasMove = true;\n            if (i < this.state.length - 1 && this.state[i][j] === this.state[i + 1][j]) hasMove = true;\n        }\n        if (!isZero && !hasMove) this.status = $a5fd07fa01589658$var$Game.STATUS.lose;\n    }\n    // AI helped to compare the Arrays\n    checkSameArr(firstArr, secondArr = this.state) {\n        if (firstArr.length !== secondArr.length) return false;\n        for(let i = 0; i < firstArr.length; i++){\n            if (Array.isArray(firstArr[i]) && Array.isArray(secondArr[i])) {\n                // Recursively check for nested arrays\n                if (!this.checkSameArr(firstArr[i], secondArr[i])) return false;\n            } else if (firstArr[i] !== secondArr[i]) return false;\n        }\n        return true;\n    }\n    funcReverse(newStateArr) {\n        for(let i = 0; i < this.state.length; i++){\n            const newRowArr = [];\n            for(let j = 0; j < this.state[i].length; j++)newRowArr.push(this.state[j][i]);\n            newStateArr.push(newRowArr);\n        }\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\n// All html veriables\nconst $09e991522ca7e64e$var$buttonStart = document.querySelector(\".start\");\nconst $09e991522ca7e64e$var$gameScore = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$fieldRow = [\n    ...document.querySelectorAll(\".field-row\")\n];\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\nfunction $09e991522ca7e64e$var$loseOrWin(statusToCheck) {\n    if (statusToCheck === $a5fd07fa01589658$exports.STATUS.lose) $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n    if (statusToCheck === $a5fd07fa01589658$exports.STATUS.win) $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$displayNumbers(state) {\n    for(let i = 0; i < $09e991522ca7e64e$var$fieldRow.length; i++)for(let j = 0; j < $09e991522ca7e64e$var$fieldRow[i].children.length; j++){\n        $09e991522ca7e64e$var$fieldRow[i].children[j].textContent = \"\";\n        $09e991522ca7e64e$var$fieldRow[i].children[j].className = `field-cell`;\n        if (state[i][j] > 0) {\n            $09e991522ca7e64e$var$fieldRow[i].children[j].textContent = state[i][j];\n            $09e991522ca7e64e$var$fieldRow[i].children[j].className = `field-cell field-cell--${state[i][j]}`;\n        }\n    }\n}\n$09e991522ca7e64e$var$buttonStart.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$buttonStart.classList.contains(\"start\")) {\n        $09e991522ca7e64e$var$buttonStart.textContent = \"Restart\";\n        $09e991522ca7e64e$var$buttonStart.classList.remove(\"start\");\n        $09e991522ca7e64e$var$buttonStart.classList.add(\"restart\");\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$displayNumbers($09e991522ca7e64e$var$game.getState());\n        $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n        $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n    } else {\n        $09e991522ca7e64e$var$buttonStart.textContent = \"Start\";\n        $09e991522ca7e64e$var$buttonStart.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$buttonStart.classList.add(\"start\");\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$displayNumbers($09e991522ca7e64e$var$game.getState());\n        $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n        $09e991522ca7e64e$var$startMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n    }\n});\ndocument.addEventListener(\"keydown\", (e)=>{\n    switch(e.key){\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n    }\n    $09e991522ca7e64e$var$displayNumbers($09e991522ca7e64e$var$game.getState());\n    $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$loseOrWin($09e991522ca7e64e$var$game.getStatus());\n});\n\n\n//# sourceMappingURL=index.add4fb10.js.map\n","'use strict';\n\n// Module\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// All html veriables\nconst buttonStart = document.querySelector('.start');\nconst gameScore = document.querySelector('.game-score');\nconst fieldRow = [...document.querySelectorAll('.field-row')];\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nfunction loseOrWin(statusToCheck) {\n  if (statusToCheck === Game.STATUS.lose) {\n    loseMessage.classList.remove('hidden');\n  }\n\n  if (statusToCheck === Game.STATUS.win) {\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction displayNumbers(state) {\n  for (let i = 0; i < fieldRow.length; i++) {\n    for (let j = 0; j < fieldRow[i].children.length; j++) {\n      fieldRow[i].children[j].textContent = '';\n      fieldRow[i].children[j].className = `field-cell`;\n\n      if (state[i][j] > 0) {\n        fieldRow[i].children[j].textContent = state[i][j];\n\n        fieldRow[i].children[j].className =\n          `field-cell field-cell--${state[i][j]}`;\n      }\n    }\n  }\n}\n\nbuttonStart.addEventListener('click', () => {\n  if (buttonStart.classList.contains('start')) {\n    buttonStart.textContent = 'Restart';\n\n    buttonStart.classList.remove('start');\n    buttonStart.classList.add('restart');\n\n    game.start();\n    displayNumbers(game.getState());\n\n    gameScore.textContent = game.getScore();\n\n    startMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n  } else {\n    buttonStart.textContent = 'Start';\n\n    buttonStart.classList.remove('restart');\n    buttonStart.classList.add('start');\n\n    game.restart();\n    displayNumbers(game.getState());\n\n    gameScore.textContent = game.getScore();\n\n    startMessage.classList.remove('hidden');\n    loseMessage.classList.add('hidden');\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n  }\n  displayNumbers(game.getState());\n  gameScore.textContent = game.getScore();\n  loseOrWin(game.getStatus());\n});\n","'use strict';\n\nclass Game {\n  static STATUS = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  static INITIAL_STATE = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  constructor(initialState = Game.INITIAL_STATE) {\n    this.status = Game.STATUS.idle;\n    this.initialState = initialState;\n    this.score = 0;\n    this.state = this.initialState.map((row) => row.slice());\n  }\n\n  moveLeft() {\n    if (this.status === Game.STATUS.playing) {\n      const newStateArr = [];\n\n      for (let i = 0; i < this.state.length; i++) {\n        // this code remove all 0 and push it back to the end\n\n        let newRowArr = this.state[i].filter((el) => el > 0);\n\n        for (let index = newRowArr.length; index < this.state.length; index++) {\n          newRowArr.push(0);\n        }\n\n        // Here i merged neigber numbers in row\n        for (let j = 0; j < newRowArr.length; j++) {\n          if (newRowArr[j] === newRowArr[j + 1]) {\n            newRowArr[j] = newRowArr[j] + newRowArr[j + 1];\n            newRowArr[j + 1] = 0;\n            this.score += newRowArr[j] + newRowArr[j + 1];\n          }\n        }\n\n        newRowArr = newRowArr.filter((el) => el > 0);\n\n        for (let index = newRowArr.length; index < this.state.length; index++) {\n          newRowArr.push(0);\n        }\n\n        newStateArr.push(newRowArr);\n      }\n\n      if (!this.checkSameArr(newStateArr)) {\n        this.state = newStateArr;\n        this.randomNumber();\n      }\n      this.loseOrWin();\n    }\n  }\n  moveRight() {\n    if (this.status === Game.STATUS.playing) {\n      const newStateArr = [];\n\n      for (let i = 0; i < this.state.length; i++) {\n        // this code remove all 0 and unshift it back to the end\n\n        let newRowArr = this.state[i].filter((el) => el > 0);\n\n        for (let index = newRowArr.length; index < this.state.length; index++) {\n          newRowArr.unshift(0);\n        }\n\n        //   Here i merged neigber numbers in row\n        for (let j = newRowArr.length - 1; j > 0; j--) {\n          if (newRowArr[j] === newRowArr[j - 1]) {\n            newRowArr[j] = newRowArr[j] + newRowArr[j - 1];\n            newRowArr[j - 1] = 0;\n            this.score += newRowArr[j] + newRowArr[j - 1];\n          }\n        }\n\n        newRowArr = newRowArr.filter((el) => el > 0);\n\n        for (let index = newRowArr.length; index < this.state.length; index++) {\n          newRowArr.unshift(0);\n        }\n\n        newStateArr.push(newRowArr);\n      }\n\n      if (!this.checkSameArr(newStateArr)) {\n        this.state = newStateArr;\n        this.randomNumber();\n      }\n      this.loseOrWin();\n    }\n  }\n  moveUp() {\n    if (this.status === Game.STATUS.playing) {\n      let newStateArr = [];\n\n      this.funcReverse(newStateArr);\n      this.state = newStateArr;\n\n      newStateArr = [];\n      this.moveLeft();\n\n      this.funcReverse(newStateArr);\n      this.state = newStateArr;\n    }\n  }\n  moveDown() {\n    if (this.status === Game.STATUS.playing) {\n      let newStateArr = [];\n\n      this.funcReverse(newStateArr);\n      this.state = newStateArr;\n\n      newStateArr = [];\n      this.moveRight();\n\n      this.funcReverse(newStateArr);\n      this.state = newStateArr;\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  restart() {\n    this.initialState = Game.INITIAL_STATE;\n    this.status = Game.STATUS.idle;\n    this.state = this.initialState.map((row) => row.slice());\n    this.score = 0;\n  }\n\n  start() {\n    this.status = Game.STATUS.playing;\n    this.randomNumber();\n    this.randomNumber();\n  }\n\n  randomNumber() {\n    const emptyCells = [];\n\n    for (let rowIndex = 0; rowIndex < this.state.length; rowIndex++) {\n      for (\n        let colIndex = 0;\n        colIndex < this.state[rowIndex].length;\n        colIndex++\n      ) {\n        if (this.state[rowIndex][colIndex] === 0) {\n          emptyCells.push({ row: rowIndex, col: colIndex });\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const { row, col } = emptyCells[randomIndex];\n\n    // Place a 2 or 4 in the selected cell\n    const newValue = Math.floor(Math.random() * 10) + 1 > 8 ? 4 : 2;\n\n    this.state[row][col] = newValue;\n  }\n\n  loseOrWin() {\n    let isZero = false;\n    let hasMove = false;\n\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        if (this.state[i][j] === 2048) {\n          this.status = Game.STATUS.win;\n\n          return;\n        }\n\n        if (this.state[i][j] === 0) {\n          isZero = true;\n        }\n\n        if (\n          j < this.state[i].length - 1 &&\n          this.state[i][j] === this.state[i][j + 1]\n        ) {\n          hasMove = true;\n        }\n\n        if (\n          i < this.state.length - 1 &&\n          this.state[i][j] === this.state[i + 1][j]\n        ) {\n          hasMove = true;\n        }\n      }\n    }\n\n    if (!isZero && !hasMove) {\n      this.status = Game.STATUS.lose;\n    }\n  }\n\n  // AI helped to compare the Arrays\n  checkSameArr(firstArr, secondArr = this.state) {\n    if (firstArr.length !== secondArr.length) {\n      return false;\n    }\n\n    for (let i = 0; i < firstArr.length; i++) {\n      if (Array.isArray(firstArr[i]) && Array.isArray(secondArr[i])) {\n        // Recursively check for nested arrays\n        if (!this.checkSameArr(firstArr[i], secondArr[i])) {\n          return false;\n        }\n      } else if (firstArr[i] !== secondArr[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  funcReverse(newStateArr) {\n    for (let i = 0; i < this.state.length; i++) {\n      const newRowArr = [];\n\n      for (let j = 0; j < this.state[i].length; j++) {\n        newRowArr.push(this.state[j][i]);\n      }\n      newStateArr.push(newRowArr);\n    }\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$exports","$a5fd07fa01589658$var$Game","STATUS","idle","playing","win","lose","INITIAL_STATE","constructor","initialState","status","score","state","map","row","slice","moveLeft","newStateArr","i","length","newRowArr","filter","el","index","push","j","checkSameArr","randomNumber","loseOrWin","moveRight","unshift","moveUp","funcReverse","moveDown","getScore","getState","getStatus","restart","start","emptyCells","rowIndex","colIndex","col","randomIndex","Math","floor","random","isZero","hasMove","firstArr","secondArr","Array","isArray","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$buttonStart","document","querySelector","$09e991522ca7e64e$var$gameScore","$09e991522ca7e64e$var$fieldRow","querySelectorAll","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$displayNumbers","children","textContent","className","addEventListener","classList","contains","remove","add","e","statusToCheck","key"],"version":3,"file":"index.add4fb10.js.map"}